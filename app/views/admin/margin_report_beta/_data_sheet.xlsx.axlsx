font_size = 14
style_bold = wb.styles.add_style b: true, sz: font_size
style_heading = wb.styles.add_style b: true, alignment: { horizontal: :center }, sz: font_size
style_plain = wb.styles.add_style sz: font_size, alignment: { horizontal: :left }
style_center = wb.styles.add_style alignment: { horizontal: :center }, sz: font_size
style_date = wb.styles.add_style format_code: 'yyyy-mm-dd', alignment: { horizontal: :center }, sz: font_size
style_currency = wb.styles.add_style num_fmt: 8, sz: font_size
style_currency_red  = wb.styles.add_style num_fmt: 6, sz: font_size
style_percent = wb.styles.add_style num_fmt: 10, sz: font_size
style_number = wb.styles.add_style num_fmt: 3, sz: font_size

row_array = []

case params[:report_by]
when 'customer'
  row_array << { col: '', heading: 'cid', cell_style: style_center,
                cell: lambda { |row, row_num| row[:customer_id] } }

  row_array << { col: '', heading: 'Customer Name', cell_style: style_plain,
                cell: lambda { |row, row_num| row[:customer_name] } }
when 'network'
  row_array << {col: '', heading: 'nid', cell_style: style_center,
                cell: lambda {|row, row_num| row[:network_id]} }
  row_array << {col: '', heading: 'Network Name', cell_style: style_plain,
                cell: lambda {|row, row_num| row[:network_name]} }
when 'placement'
  row_array << {col: '', heading: 'pid', cell_style: style_center,
                cell: lambda {|row, row_num| row[:placement_id]} }
  row_array << {col: '', heading: 'Placement Name', cell_style: style_plain,
                cell: lambda {|row, row_num| row[:placement_name]} }
  row_array << {col: '', heading: 'Customer Name', cell_style: style_plain,
                cell: lambda {|row, row_num| row[:customer_name] } }
when 'ad_source'
  row_array << {col: '', heading: 'adsrc_id', cell_style: style_center,
                cell: lambda {|row, row_num| row[:ad_source_id]} }
  row_array << {col: '', heading: 'Dbam Symbol', cell_style: style_plain,
                cell: lambda {|row, row_num| row[:dbam_symbol]} }
  row_array << {col: '', heading: 'Customer Name', cell_style: style_plain,
                cell: lambda {|row, row_num| row[:external_id]} }

else
  row_array << {col: '', heading: 'Dbam Date', cell_style: style_date,
                cell: lambda {|row, row_num| row[:date_est]} }
end

row_array << {col: '', heading: 'M2 Network Imp', cell_style: style_number,
              cell: lambda {|row, row_num| row[:network_impressions_m2].round if row[:network_impressions_m2]} }

row_array << {col: '', heading: 'M2 Network Rev', cell_style: style_currency,
              cell: lambda {|row, row_num| row[:revenue_in_m2].round(2) if row[:revenue_in_m2] } }

row_array << {col: '', heading: 'M2 Adj Dbam Imp', cell_style: style_number,
              cell: lambda {|row, row_num| row[:dbam_impressions_m2].round if row[:dbam_impressions_m2]} }

row_array << {col: '', heading: 'M2 % Reconc', cell_style: style_percent,
              cell: lambda {|row, row_num| ((row[:reconciled_impressions] * BigDecimal(1)) / row[:impressions_m0])
                                            .round(4) if (row[:impressions_m0] || 0) > 0} }

row_array << {col: '', heading: 'M2 Customer Payout', cell_style: style_currency,
              cell: lambda {|row, row_num| row[:pay_out_m2].round(2) if row[:pay_out_m2] } }

row_array << {col: '', heading: 'M2 Margin', cell_style: style_currency_red,
              cell: lambda {|row, row_num| ((row[:revenue_in_m2] || 0) - (row[:pay_out_m2] || 0)).round(2) } }

row_array << {col: '', heading: 'M2 Margin %', cell_style: style_percent,
              cell: lambda {|row, row_num| ((row[:revenue_in_m2] - (row[:pay_out_m2] || 0)) / row[:revenue_in_m2])
                                            .round(4) if (row[:revenue_in_m2] || 0) > 0} }

if @show_model_1 == 'yes'

  row_array << {col: '', heading: 'M1 Network Imp', cell_style: style_number,
                cell: lambda {|row, row_num| row[:network_impressions_m1].round if row[:network_impressions_m1] } }

  row_array << {col: '', heading: 'M1 Network Rev', cell_style: style_currency,
                cell: lambda {|row, row_num| row[:revenue_in_m1].round(2) if row[:revenue_in_m1] } }

  row_array << {col: '', heading: 'M1 Dbam Imp', cell_style: style_number,
                cell: lambda {|row, row_num| row[:dbam_impressions_m1].round if row[:dbam_impressions_m1] } }

  row_array << {col: '', heading: 'M1 Customer Payout', cell_style: style_currency,
                cell: lambda {|row, row_num| row[:pay_out_m1].round(2) if row[:pay_out_m1] } }

  row_array << {col: '', heading: 'M1 Margin', cell_style: style_currency_red,
                cell: lambda {|row, row_num| ((row[:revenue_in_m1] || 0) - (row[:pay_out_m1] || 0)).round(2) } }

  row_array << {col: '', heading: 'M1 Margin %', cell_style: style_percent,
                cell: lambda {|row, row_num| ((row[:revenue_in_m1] - (row[:pay_out_m1] || 0)) / row[:revenue_in_m1])
                                              .round(4) if (row[:revenue_in_m1] || 0) > 0} }
end

row_array << {col: '', heading: 'M0 Impressions', cell_style: style_number,
              cell: lambda {|row, row_num| row[:impressions_m0].round if row[:impressions_m0] } }

row_array << {col: '', heading: 'M0 Network Rev', cell_style: style_currency,
              cell: lambda {|row, row_num| row[:revenue_in_m0].round(2) if row[:revenue_in_m0] } }

row_array << {col: '', heading: 'M0 Customer Payout', cell_style: style_currency,
              cell: lambda {|row, row_num| row[:pay_out_m0].round(2) if row[:pay_out_m0] } }

row_array << {col: '', heading: 'M0 Margin', cell_style: style_currency_red,
              cell: lambda {|row, row_num| ((row[:revenue_in_m0] || 0) - (row[:pay_out_m0] || 0)).round(2) } }

row_array << {col: '', heading: 'M0 Margin %', cell_style: style_percent,
              cell: lambda {|row, row_num| ((row[:revenue_in_m0] - (row[:pay_out_m0] || 0)) / row[:revenue_in_m0])
                                            .round(4) if (row[:revenue_in_m0] || 0) > 0} }

column_headings = row_array.map { |x| x[:heading] }
row_styles = row_array.map { |x| x[:cell_style] }
total_styles = row_array.map { |x| x[:total_style] }

wb.add_worksheet(name: name) do |sheet|
  sheet.add_row column_headings, style: style_heading

  row_num = 1
  first_data_row = 2
  output.each do |record|
    row_num += 1
    row_cells = row_array.map { |x| x[:cell] ? x[:cell].call(record, row_num) : nil }
    sheet.add_row row_cells, style: row_styles
  end

  last_data_row = row_num

  row_num += 1
  sheet.add_row []

  row_num += 1
  total_row = row_num
  row_cells = row_array.map { |x| x[:total] ? x[:total].call(first_data_row, last_data_row, total_row) : nil }
end
